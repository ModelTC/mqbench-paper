PPL-DSP
========
PPL-DSP is a inference engine of SenseTime to run model on DSP.

.. _PPL-DSP Quantization Scheme:

Quantization Scheme
---------------------
8bit per-layer/per-channel asymmetric linear quantization.

.. math::

    \begin{equation}
        q = \mathtt{clamp}(\lfloor x * s \rceil + z, lb, ub)
    \end{equation}

where :math:`s` is scaling factor to quantize a number from floating range to integer range, z represents the quantized value of floating zero. :math:`lb = 0` and :math:`ub = 255` are bounds of integer range.

For weights, all weights can share the same scale :math:`s` or each filter has an independent scale :math:`s`.

When generate the quantized PPL model, you can fill :math:`s` and :math:`z` as step and zero_point in the prototxt.

.. attention::
    All blobs must have quantization parameters, which can be generated by Dipoorlet/Dirichlet.
    BN and ReLU are recommended to be merged.


Documentation and Support OPs
-----------------------------

.. _PPL_DSP Documentation: https://confluence.sensetime.com/display/PlatformSupport/PPL+DSP+Quantization+Simulator+User+Guide
.. _Hexagon DSP Supported OPs: https://confluence.sensetime.com/pages/viewpage.action?pageId=166529685
.. _Ceva DSP Supported OPs: https://confluence.sensetime.com/pages/viewpage.action?pageId=173481656

HPC team provides a `PPL_DSP Documentation`_ to show how to use the simulator and gives the list of `Hexagon DSP Supported OPs`_ and `Ceva DSP Supported OPs`_.
